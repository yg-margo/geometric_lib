name: Unit Tests CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        
        # Create requirements.txt if it doesn't exist
        if [ ! -f requirements.txt ]; then
          echo "# Geometric Library Dependencies" > requirements.txt
        fi
        
        # Install dependencies from requirements.txt
        python -m pip install -r requirements.txt
      shell: bash
      if: runner.os != 'Windows'

    - name: Install dependencies (Windows)
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        
        # Create requirements.txt if it doesn't exist
        if (!(Test-Path requirements.txt)) {
          "# Geometric Library Dependencies" | Out-File -FilePath requirements.txt -Encoding UTF8
        }
        
        # Install dependencies from requirements.txt
        python -m pip install -r requirements.txt
      shell: pwsh
      if: runner.os == 'Windows'

    - name: Run unit tests
      run: |
        python -m unittest discover tests -v
      shell: bash

    - name: Run tests with coverage
      run: |
        coverage run -m unittest discover tests
        coverage report --show-missing
      shell: bash

    - name: Generate test summary
      if: always()
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **OS**: ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Python Version**: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: Tests completed" >> $GITHUB_STEP_SUMMARY
      shell: bash
