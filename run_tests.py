"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö unit-—Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ geometric_lib.

–≠—Ç–æ—Ç –º–æ–¥—É–ª—å –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤
–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests/. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.

–§—É–Ω–∫—Ü–∏–∏:
    run_all_tests() - –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python run_tests.py

–í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∫–æ–¥—ã:
    0 - –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
    1 - –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å
"""
import unittest
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))


def run_all_tests():
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ unit-—Ç–µ—Å—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ geometric_lib.

    –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests/
    —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º test_*.py –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ö —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç unittest.TestLoader –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –∏ unittest.TextTestRunner
    –¥–ª—è –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –æ—Ç—á–µ—Ç–æ–º.

    –ü—Ä–æ—Ü–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:
        1. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests/
        2. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç TestLoader.discover() –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö test_*.py —Ñ–∞–π–ª–æ–≤
        3. –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã —Å verbosity=2 –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
        4. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—Ö–∞

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        bool: True –µ—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, False –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—É–¥–∞—á–∏

    –ò—Å–∫–ª—é—á–µ–Ω–∏—è:
        FileNotFoundError: –µ—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è tests/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
        ImportError: –µ—Å–ª–∏ –Ω–µ —É–¥–∞–µ—Ç—Å—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –º–æ–¥—É–ª–∏

    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        >>> success = run_all_tests()
        >>> if success:
        ...     print("–í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏!")
        ... else:
        ...     print("–ï—Å—Ç—å –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã!")

    –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
        test_area_positive_radius (tests.test_circle.CircleTestCase) ... ok
        test_area_zero_radius (tests.test_circle.CircleTestCase) ... ok
        ...
        Ran 28 tests in 0.003s
        OK
    """
    try:
        # –û–±–Ω–∞—Ä—É–∂–∏–≤–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ tests
        loader = unittest.TestLoader()
        start_dir = os.path.join(os.path.dirname(__file__), 'tests')

        if not os.path.exists(start_dir):
            print(f"‚ùå –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {start_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return False

        suite = loader.discover(start_dir, pattern='test_*.py')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ—Å—Ç—ã –Ω–∞–π–¥–µ–Ω—ã
        if suite.countTestCases() == 0:
            print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –¢–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
            return False

        print(f"üîç –ù–∞–π–¥–µ–Ω–æ {suite.countTestCases()} —Ç–µ—Å—Ç–æ–≤")
        print("=" * 60)

        runner = unittest.TextTestRunner(verbosity=2)
        result = runner.run(suite)

        print("=" * 60)

        return result.wasSuccessful()

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤: {e}")
        return False


def print_test_summary(result):
    """
    –í—ã–≤–æ–¥–∏—Ç –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.

    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–±—ä–µ–∫—Ç TestResult –∏ –≤—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É
    –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö, –ø—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫ –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        result (unittest.TestResult): —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
        None

    –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
        üìä –°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:
        ‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: 25
        ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: 2
        ‚ö†Ô∏è –û—à–∏–±–∫–∏: 1
        üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: 89.3%
    """
    if not result:
        return

    total = result.testsRun
    failures = len(result.failures)
    errors = len(result.errors)
    passed = total - failures - errors
    success_rate = (passed / total * 100) if total > 0 else 0

    print("üìä –°–≤–æ–¥–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}")
    if failures > 0:
        print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {failures}")
    if errors > 0:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∏: {errors}")
    print(f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_rate:.1f}%")


if __name__ == '__main__':
    """
    –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é.

    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:
        1. –ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã —á–µ—Ä–µ–∑ run_all_tests()
        2. –í—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        3. –ó–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –∫–æ–¥–æ–º –≤–æ–∑–≤—Ä–∞—Ç–∞

    –ö–æ–¥—ã –≤–æ–∑–≤—Ä–∞—Ç–∞:
        0 - –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ
        1 - –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ geometric_lib")
    print("=" * 60)

    success = run_all_tests()

    if success:
        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        print("üéâ –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        sys.exit(0)
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å!")
        print("üîß –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ —Ä–µ–ª–∏–∑–æ–º.")
        sys.exit(1)